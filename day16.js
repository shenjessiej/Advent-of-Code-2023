const data = String.raw`\...\............................../...\....-..../...|....../.......-...........................|.............
.............|/.../............................-....|......../...........|.|................/\-..|....\...../.
....\......-.....||-\........................|/........|............/.......................|\...|............
|.....-....\.|......-.\....\-......|.........../|......../\...\.-..........-.........\...-..\........./.......
............../.|..........|.......|.......\.\...............|../......................\......................
.-.-...|....-.-.......\...\..../....../.......-..................\......./....................-........-......
..........\.....|.....\.....\..................................................................|..............
...../..................../...........-..-.........................-...................................../-...
......\......\.............|..../..........\.........................\..\../....../...........-...........-...
.....|./..........-....\....|........./..........-..............-./........../..............-...\...../.......
...../...../.......-..............|......\\../......../........../............../......\......\...../........-
..\................|......\.............\|............./..../...-...........................|-../|...|......./
....|.........-.|....-....-.....|.......................................-...../.\.............\.........-.....
.........-........././................\../...........\.......\......./.....\................\...\.............
.............|........\....|........\........................././\............-............./............/....
................./...-..........|..............--../.|\............./.........................................
.|../.....|................|........../.......-.......-.............\.........................................
.............\..................\......../.......\/................\....\......../...././....................|
.................\................................../..........................................|..............
................|..................../..................\...........................|./..........-.........-..
...|.............\.....-..||...-......../.........................../......................-..-|.........-....
.\...........................-../................|.../............/....-......\............................../
.........................|...............|...........|.|.............\....\...../........-.--/................
./...|.........-.............|..-../..........\........./../...........................|.....................\
.|.....-......\..-..................\..|.../................................/\......-.........../...../..../..
...\...............\....\../.........|\................-......................................\...............
....../..-|...................................\.........|...-....|..../.......................|/..............
.........|.|..............-...................../.................|./-....|../..........\..............|......
.......\..|...\...........|....................|.-......................\..-.../.......\|..........\.../.|.\.|
-.............................|....................|.....|.........-.........|..-........./.......|\.|.../....
.-.......\...................\.....\../......|..............|...................-............./.....-.........
...|..................../..|\....\..-............\................\..................................|....-...
...............\....................\.|\....-.............|....../.................\..........\....../.....\..
......|..\......................-........\.......\.../.|......-...............|......./\../........../........
.........-..../........-\.........-.......-.....|.|....\.\........\.-.......|.........-....|...--.-..|........
.....|..|.|....-./.....|.....|...........|/\...../.............\/....|-........./..-.................../......
.|....../..............-...-............-.......-....................\..-...-.|...............................
|.............|............................|.............................-....................................
....../....-../..........\...|......-.|...........\..|..................-...../../-..\.........\.....|........
......\../..................-..............-.../.......-.............................\..-....\/...............
............\......................./..................|....-....................-........../.....-.......-...
...............|...........-./.......\...-..../....|....-........./..-.........-...........-.\................
/..................../.................\.....-................./\/........../............./..|................
....................../.............../\..........|.....\|../...-..\............|........./...................
......................-../.|...............................................-......./..\......|................
.......\...............|..............|.../............................\........./....|.....|................|
....\......../....-...|.................-..........-...|/./...................../.\...........................
.........|......./.............|../..-.......................-|...........\.........|...|.....................
..\............../.......................-....\.................-.....|.........-.............................
.....-/...............|......|..../......-...|..../...........-................................-.....\...\...\
......................../.......\................./..\..........\............|...................\............
-....................../...........\......./...|...........\|./........-..................\...-......../......
.......|./..........|...\................/..............|.\.............\.\..................................\
.|............\.......\..........\./..........-...................../..|............................../.......
........................../....../...|......-..\..............|-.|....\-...|../.........\......-.\./..........
....../.........../.........../..\......./......../-...\...........\............/.....................|...\...
...-....../.../.....\....-...........\..................../.........-......................\..................
/............|../.......................-.........|....../......|.......|............/-..../..../............|
../..|...............|../-................/.........................................|.........................
.....-..........-\-...........|....../\....................|......................-.....-..........\..........
.-.....\......./.....\............../...|...|............-...|...../.............\...\../|...../...|......../.
.../......-..|...................\-...../..-..|.......|..-..../........|....-.../.......|........|......|.....
.-....../............/........-/..........\........\...........................\..........................|...
.....|...|........................................../...........................-|.......|..-.................
|...........|.\..............|......................-|./.......|../....\-.|\.../...-.......|.......|..........
.|.........\.|../.....-.........\......\..\...........|...................\.........../......|.......-..../...
...............|.....................|......|.................../.............|.....-..|..........-...........
|.............|...........|............../......................\..........-.............|.....-..............
.\............-../\.................-.......|.-............../........\.......|.............\.....\...........
.../.\.....\|..-.............\.....................................|.................-............/..........|
.../../.............................-...|.......|..............-............................-.................
......................\-\............-......|.-............|.\...............-.../......\.........-...........
............................|..\.-.............../.\.../.......-..................\...........................
..../..\........-........\......../..\......../......\./..-|....|........\............|...................|\..
..................................................|...\..../........................................-.........
...\......-............\.......-...\...\............|\..../\....../.||........................................
...............-................-......-....../.../............................-.|....|................./..\..
......././../....-...................................................\..............................||........
|/.....\........./....................\......-.-.....|......|................../............................\.
................./..\...................\......\.........\..............-.....-....................\..-..../.\
...\......|..-.........-.....|.........-........|.............|..............\............-...................
.\..........|.............-............../../......../........................................................
....\....................................................-......../..-........|.....\..........\..............
.......-..\....................-..|.....-..../.-......../............\.............|..............|../........
...|/....-.............-......../\...........|................/..................\.....|....................-.
.....-................./.|......../..........-......|...\.....-..............-...-..|.......................|.
.........\..../...........-........|--......-.........-.........\...-.......|.\........-.........|.........../
........-...|../......../........\.....|.....|.....\................/.......-.....-.........../..|........\...
.-....\................||.......|...\..\......./.....-............|../...............|........./......-...-...
.......\......\............../.|.......................................|.......................|........./|...
............|../........-............................/.........-.........-..\..\..../.../.\...\.\.............
....................\...|.....\/...|\.|.................\.|...............................................\-..
.................\|...-........./\.......|.......................................-.........\..................
.......-.......|.............\....|...\.....-.\./.....-..................\\........-..\......-....../.........
............-...../....................|...-....../..............-..../................|...........-..........
............../\..........|........|./\\..|.....|../....-......../..............-............\......./...\....
............./....../......-...............\|..\............../......\.......................-.......|..-.....
.....-........./....\......................\...../...|./..\.../\...../.......\...............\............../.
...................................|..../../.-....................-.....-.......-...................-....-....
..................................................-......|-............|-...\.\...............\...............
.............../...........\................/.....\...........-.....|......................-............-.....
.............|.....|......................./.......|.............................\.|..........\../........\...
........................|..............\............................/...................-..|.......\.\........
.......|....../............/...............-..........|\.........|.......\.....|.............\/../...-...-....
......\.\.....-..||...-.\........\....|...../\/....\........../........|......|...............................
..\........-../....\/.....................-...........................|.......................................
..............|../.|...............\...\.........|..\............../......./.-.....\......-..../..............
....|....-............../......-.\........-............|.|..|.........................../.......|.............
........\............./...................|......../....|..-.....................|./.......\..................
............./.|...........\.............................../.....\....|/.......|.|........./.........|........`;
const test = String.raw`
.|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|....
`;

let grid = data.trim().split("\n");
grid = grid.map((line) => {
  return line.split("");
});

function hash(coord) {
  return "[" + coord[0] + "," + coord[1] + "]";
}
function shoot_beam(starting_coord, starting_direction) {
  let current_direction = starting_direction;
  let current_coord = starting_coord;
  let beam_done = false;

  if (cache.has(hash(current_coord))) {
    if (cache.get(hash(current_coord)).includes(current_direction)) {
      beam_done = true;
    }
  }
  while (!beam_done) {
    let cached_beam = false;
    if (cache.has(hash(current_coord))) {
      if (cache.get(hash(current_coord)).includes(current_direction)) {
        cached_beam = true;
      }
    }
    if (
      current_coord[0] < 0 ||
      current_coord[0] >= grid.length ||
      current_coord[1] < 0 ||
      current_coord[1] >= grid[0].length ||
      cached_beam
    ) {
      beam_done = true;
    } else {
      energized[current_coord[0]][current_coord[1]] = "#";
      cache.set(hash(current_coord), current_direction);

      if (current_direction == "left") {
        if (
          grid[current_coord[0]][current_coord[1]] == "." ||
          grid[current_coord[0]][current_coord[1]] == "-"
        ) {
          current_coord = [current_coord[0], current_coord[1] - 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "/") {
          current_direction = "down";
          current_coord = [current_coord[0] + 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "\\") {
          current_direction = "up";
          current_coord = [current_coord[0] - 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "|") {
          current_direction = "up";
          current_coord = [current_coord[0] - 1, current_coord[1]];
          shoot_beam([current_coord[0] + 1, current_coord[1]], "down");
        }
      } else if (current_direction == "right") {
        if (
          grid[current_coord[0]][current_coord[1]] == "." ||
          grid[current_coord[0]][current_coord[1]] == "-"
        ) {
          current_coord = [current_coord[0], current_coord[1] + 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "/") {
          current_direction = "up";
          current_coord = [current_coord[0] - 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "\\") {
          current_direction = "down";
          current_coord = [current_coord[0] + 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "|") {
          current_direction = "up";
          current_coord = [current_coord[0] - 1, current_coord[1]];
          shoot_beam([current_coord[0] + 1, current_coord[1]], "down");
        }
      } else if (current_direction == "up") {
        if (
          grid[current_coord[0]][current_coord[1]] == "." ||
          grid[current_coord[0]][current_coord[1]] == "|"
        ) {
          current_coord = [current_coord[0] - 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "/") {
          current_direction = "right";
          current_coord = [current_coord[0], current_coord[1] + 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "\\") {
          current_direction = "left";
          current_coord = [current_coord[0], current_coord[1] - 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "-") {
          current_direction = "left";
          current_coord = [current_coord[0], current_coord[1] - 1];
          shoot_beam([current_coord[0], current_coord[1] + 1], "right");
        }
      } else if (current_direction == "down") {
        if (
          grid[current_coord[0]][current_coord[1]] == "." ||
          grid[current_coord[0]][current_coord[1]] == "|"
        ) {
          current_coord = [current_coord[0] + 1, current_coord[1]];
        } else if (grid[current_coord[0]][current_coord[1]] == "/") {
          current_direction = "left";
          current_coord = [current_coord[0], current_coord[1] - 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "\\") {
          current_direction = "right";
          current_coord = [current_coord[0], current_coord[1] + 1];
        } else if (grid[current_coord[0]][current_coord[1]] == "-") {
          current_direction = "left";
          current_coord = [current_coord[0], current_coord[1] - 1];
          shoot_beam([current_coord[0], current_coord[1] + 1], "right");
        }
      }
    }
  }
}

let energized = [];
for (let i = 0; i < grid.length; i++) {
  energized[i] = [];
  for (var j = 0; j < grid[0].length; j++) {
    energized[i][j] = ".";
  }
}

let cache = new Map();

let max = 0;

//top row
for (let i = 0; i < grid[0].length; i++) {
  cache = new Map();
  energized = [];
  for (let i = 0; i < grid.length; i++) {
    energized[i] = [];
    for (var j = 0; j < grid[0].length; j++) {
      energized[i][j] = ".";
    }
  }

  shoot_beam([0, i], "down");
  let total = 0;
  energized.forEach((line) => {
    line.forEach((cell) => {
      if (cell == "#") total++;
    });
  });
  max = Math.max(max, total);
}

// bottom row
for (let i = 0; i < grid[0].length; i++) {
  cache = new Map();
  energized = [];
  for (let i = 0; i < grid.length; i++) {
    energized[i] = [];
    for (var j = 0; j < grid[0].length; j++) {
      energized[i][j] = ".";
    }
  }

  shoot_beam([grid.length-1, i], "up");
  let total = 0;
  energized.forEach((line) => {
    line.forEach((cell) => {
      if (cell == "#") total++;
    });
  });
  max = Math.max(max, total);
}

// left edge
for (let i = 0; i < grid.length; i++) {
  cache = new Map();
  energized = [];
  for (let i = 0; i < grid.length; i++) {
    energized[i] = [];
    for (var j = 0; j < grid[0].length; j++) {
      energized[i][j] = ".";
    }
  }

  shoot_beam([i, 0], "right");
  let total = 0;
  energized.forEach((line) => {
    line.forEach((cell) => {
      if (cell == "#") total++;
    });
  });
  max = Math.max(max, total);
}


// right edge
for (let i = 0; i < grid.length; i++) {
  cache = new Map();
  energized = [];
  for (let i = 0; i < grid.length; i++) {
    energized[i] = [];
    for (var j = 0; j < grid[0].length; j++) {
      energized[i][j] = ".";
    }
  }

  shoot_beam([i, grid[0].length-1], "left");
  let total = 0;
  energized.forEach((line) => {
    line.forEach((cell) => {
      if (cell == "#") total++;
    });
  });
  max = Math.max(max, total);
}


console.log(max);
